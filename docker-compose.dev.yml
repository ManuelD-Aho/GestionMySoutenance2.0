# docker-compose.dev.yml
services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
      target: dev
    container_name: gestionmysoutenance_app_dev
    volumes:
      - .:/var/www/html
      - ./docker/php/php.ini:/usr/local/etc/php/conf.d/99-custom.ini
      - ./docker/apache/apache-vhost.conf:/etc/apache2/sites-available/000-default.conf
      - app_dev_storage:/var/www/html/storage
      - app_dev_bootstrap_cache:/var/www/html/bootstrap/cache
    ports:
      - "0.0.0.0:8080:80"
    env_file:
      - .env
    environment:
      XDEBUG_MODE: debug,develop
      XDEBUG_SESSION: PHPSTORM
      XDEBUG_CLIENT_HOST: host.docker.internal
      XDEBUG_CLIENT_PORT: 9003
      PHP_IDE_CONFIG: serverName=localhost
    depends_on:
      db:
        condition: service_healthy
      mailhog:
        condition: service_started
    networks:
      - app-network
    restart: unless-stopped

  db:
    image: mysql:8.3
    container_name: gestionmysoutenance_db_dev
    restart: unless-stopped
    command: --default-authentication-plugin=caching_sha2_password
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
    volumes:
      - db_dev_data:/var/lib/mysql
      - ./mysoutenance.sql:/docker-entrypoint-initdb.d/mysoutoutenance.sql
    ports:
      - "3306:3306"
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u${DB_USERNAME}", "-p${DB_PASSWORD}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    env_file:
      - .env
    networks:
      - app-network

  phpmyadmin:
    image: phpmyadmin/phpmyadmin:latest
    container_name: gestionmysoutenance_pma_dev
    restart: unless-stopped
    ports:
      - "0.0.0.0:8081:80"
    environment:
      PMA_HOST: db
      PMA_PORT: 3306
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      PMA_USER: ${DB_USERNAME}
      PMA_PASSWORD: ${DB_PASSWORD}
      UPLOAD_LIMIT: 128M
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - .env
    networks:
      - app-network

  mailhog:
    image: mailhog/mailhog
    container_name: gestionmysoutenance_mailhog_dev
    ports:
      - "8025:8025"
      - "1025:1025"
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  db_dev_data:
    driver: local
  app_dev_storage:
    driver: local
  app_dev_bootstrap_cache:
    driver: local
