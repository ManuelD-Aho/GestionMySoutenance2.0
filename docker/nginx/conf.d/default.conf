server {
    listen 80;
    server_name localhost;
    root /var/www/html/Public; # Le document root pointe vers le dossier Public

    index index.php index.html;

    # Bloquer l'accès direct aux répertoires sensibles et fichiers de configuration
    location ~ /(src|vendor|routes|config|docker|templates|\.env.*|composer\..*|package\..*|php\.ini|mysoutenance\.sql|Seeder\.php|render\.yaml|Dockerfile|docker-compose\..*|generate_project_structure\.php|generer_rendu\.php|Commande\.txt|Fonction\.md|README\.md|Rendu/|\.git.*|\.dockerignore|\.gitignore.*) {
        deny all;
        return 404; # Retourne 404 Not Found au lieu de 403 Forbidden pour ne pas révéler l'existence des fichiers
    }

    # Gérer les requêtes pour les fichiers PHP
    location ~ \.php$ {
        try_files $uri =404;
        fastcgi_split_path_info ^(.+\.php)(/.+)$;
        fastcgi_pass app:9000; # 'app' est le nom du service PHP-FPM dans docker-compose
        fastcgi_index index.php;
        include fastcgi_params;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_param PATH_INFO $fastcgi_path_info;
        fastcgi_buffers 16 16k; # Augmenter les buffers pour les réponses plus grandes
        fastcgi_buffer_size 32k;
    }

    # Gérer les requêtes pour les assets (CSS, JS, images)
    # Nginx servira directement ces fichiers sans passer par PHP
    location ~* \.(css|js|gif|jpg|jpeg|png|ico|svg|woff|woff2|ttf|eot)$ {
        expires 30d; # Mettre en cache les assets côté client pour 30 jours
        add_header Cache-Control "public, no-transform";
        try_files $uri =404;
    }

    # Gérer les requêtes pour les URLs propres (sans .php)
    location / {
        try_files $uri $uri/ /index.php?$query_string;
    }

    # Optionnel: Configurer les logs d'accès et d'erreur de Nginx
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log warn;
}